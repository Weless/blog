{"remainingRequest":"/Users/joey/joey/go_project/blog/manager_frontend/node_modules/babel-loader/lib/index.js!/Users/joey/joey/go_project/blog/manager_frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/joey/joey/go_project/blog/manager_frontend/src/store/module/user.js","dependencies":[{"path":"/Users/joey/joey/go_project/blog/manager_frontend/src/store/module/user.js","mtime":1592212812047},{"path":"/Users/joey/joey/go_project/blog/manager_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/manager_frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/manager_frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgc3RvcmFnZVNlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlL3N0b3JhZ2VTZXJ2aWNlJzsKaW1wb3J0IHVzZXJTZXJ2aWNlIGZyb20gJ0Avc2VydmljZS91c2VyU2VydmljZSc7CnZhciB1c2VyTW9kdWxlID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIHRva2VuOiBzdG9yYWdlU2VydmljZS5nZXQoc3RvcmFnZVNlcnZpY2UuVVNFUl9UT0tFTiksCiAgICB1c2VySW5mbzogSlNPTi5wYXJzZShzdG9yYWdlU2VydmljZS5nZXQoc3RvcmFnZVNlcnZpY2UuVVNFUl9JTkZPKSkgLy8g6ZyA6KaB5bCG5a2X56ym5Liy5Y+N5bqP5YiX5YyWCiAgICAvLyB1c2VySW5mbzpzdG9yYWdlU2VydmljZS5nZXQoc3RvcmFnZVNlcnZpY2UuVVNFUl9JTkZPKQoKICB9LAogIG11dGF0aW9uczogewogICAgLy8g54q25oCB5Y+q6IO95ZyobXV0YXRpb25z5Lit6L+b6KGMCiAgICBTRVRfVE9LRU46IGZ1bmN0aW9uIFNFVF9UT0tFTihzdGF0ZSwgdG9rZW4pIHsKICAgICAgLy8g5pu05paw5pys5Zyw57yT5a2YCiAgICAgIHN0b3JhZ2VTZXJ2aWNlLnNldChzdG9yYWdlU2VydmljZS5VU0VSX1RPS0VOLCB0b2tlbik7IC8vIOabtOaWsHN0YXRlCgogICAgICBzdGF0ZS50b2tlbiA9IHRva2VuOwogICAgfSwKICAgIFNFVF9VU0VSSU5GTzogZnVuY3Rpb24gU0VUX1VTRVJJTkZPKHN0YXRlLCB1c2VySW5mbykgewogICAgICBzdG9yYWdlU2VydmljZS5zZXQoc3RvcmFnZVNlcnZpY2UuVVNFUl9JTkZPLCBKU09OLnN0cmluZ2lmeSh1c2VySW5mbykpOwogICAgICBzdGF0ZS51c2VySW5mbyA9IHVzZXJJbmZvOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgcmVnaXN0ZXI6IGZ1bmN0aW9uIHJlZ2lzdGVyKGNvbnRleHQsIF9yZWYpIHsKICAgICAgdmFyIG5hbWUgPSBfcmVmLm5hbWUsCiAgICAgICAgICBwYXNzd29yZCA9IF9yZWYucGFzc3dvcmQ7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgdXNlclNlcnZpY2UucmVnaXN0ZXIoewogICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgLy8g5L+d5a2YdG9rZW4KICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdTRVRfVE9LRU4nLCByZXMuZGF0YS5kYXRhLnRva2VuKTsgLy8gc3RvcmFnZVNlcnZpY2Uuc2V0KHN0b3JhZ2VTZXJ2aWNlLlVTRVJfVE9LRU4sIHJlcy5kYXRhLmRhdGEudG9rZW4pOwoKICAgICAgICAgIHJldHVybiB1c2VyU2VydmljZS5pbmZvKCk7CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAvLyDkv53lrZjnlKjmiLfkv6Hmga8KICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEudXNlcik7CiAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnU0VUX1VTRVJJTkZPJywgcmVzLmRhdGEuZGF0YS51c2VyKTsKICAgICAgICAgIHJlc29sdmUocmVzKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICByZWplY3QoZXJyKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKGNvbnRleHQsIF9yZWYyKSB7CiAgICAgIHZhciBuYW1lID0gX3JlZjIubmFtZSwKICAgICAgICAgIHBhc3N3b3JkID0gX3JlZjIucGFzc3dvcmQ7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgdXNlclNlcnZpY2UubG9naW4oewogICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgLy8g5L+d5a2YdG9rZW4KICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdTRVRfVE9LRU4nLCByZXMuZGF0YS5kYXRhLnRva2VuKTsgLy8gc3RvcmFnZVNlcnZpY2Uuc2V0KHN0b3JhZ2VTZXJ2aWNlLlVTRVJfVE9LRU4sIHJlcy5kYXRhLmRhdGEudG9rZW4pOwoKICAgICAgICAgIHJldHVybiB1c2VyU2VydmljZS5pbmZvKCk7CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAvLyDkv53lrZjnlKjmiLfkv6Hmga8KICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhLmRhdGEudXNlcik7CiAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnU0VUX1VTRVJJTkZPJywgcmVzLmRhdGEuZGF0YS51c2VyKTsKICAgICAgICAgIHJlc29sdmUocmVzKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICByZWplY3QoZXJyKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjMpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgLy8g5riF6ZmkdG9rZW4KICAgICAgY29tbWl0KCdTRVRfVE9LRU4nLCAnJyk7CiAgICAgIHN0b3JhZ2VTZXJ2aWNlLnNldChzdG9yYWdlU2VydmljZS5VU0VSX1RPS0VOLCAnJyk7IC8vIOa4hemZpOeUqOaIt+S/oeaBrwoKICAgICAgY29tbWl0KCdTRVRfVVNFUklORk8nLCAnJyk7CiAgICAgIHN0b3JhZ2VTZXJ2aWNlLnNldChzdG9yYWdlU2VydmljZS5VU0VSX0lORk8sICcnKTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHVzZXJNb2R1bGU7"},{"version":3,"sources":["/Users/joey/joey/go_project/blog/manager_frontend/src/store/module/user.js"],"names":["storageService","userService","userModule","namespaced","state","token","get","USER_TOKEN","userInfo","JSON","parse","USER_INFO","mutations","SET_TOKEN","set","SET_USERINFO","stringify","actions","register","context","name","password","Promise","resolve","reject","then","res","commit","data","info","console","log","user","catch","err","login","logout"],"mappings":"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","sourcesContent":["import storageService from '@/service/storageService'\nimport userService from '@/service/userService'\n\nconst userModule = {\n    namespaced: true,\n    state: {\n        token: storageService.get(storageService.USER_TOKEN),\n        userInfo: JSON.parse(storageService.get(storageService.USER_INFO)), // 需要将字符串反序列化\n        // userInfo:storageService.get(storageService.USER_INFO)\n    },\n\n    mutations: { // 状态只能在mutations中进行\n        SET_TOKEN(state, token) {\n            // 更新本地缓存\n            storageService.set(storageService.USER_TOKEN, token)\n            // 更新state\n            state.token = token;\n        },\n        SET_USERINFO(state, userInfo) {\n            storageService.set(storageService.USER_INFO, JSON.stringify(userInfo))\n            state.userInfo = userInfo\n        }\n    },\n    actions: {\n        register(context, {\n            name,\n            password\n        }) {\n            return new Promise((resolve, reject) => {\n                userService.register({name,password})\n                    .then(res => {\n                        // 保存token\n                        context.commit('SET_TOKEN',res.data.data.token);\n                        // storageService.set(storageService.USER_TOKEN, res.data.data.token);\n                        return userService.info();\n                    })\n                    .then(res => {\n                        // 保存用户信息\n                        console.log(res.data.data.user)\n                        context.commit('SET_USERINFO',res.data.data.user)\n                        resolve(res);\n                    }).catch((err) => {\n                        reject(err);\n                    })\n            })\n        },\n        login(context, {\n            name,\n            password\n        }) {\n            return new Promise((resolve, reject) => {\n                userService.login({name,password})\n                    .then(res => {\n                        // 保存token\n                        context.commit('SET_TOKEN',res.data.data.token);\n                        // storageService.set(storageService.USER_TOKEN, res.data.data.token);\n                        return userService.info();\n                    })\n                    .then(res => {\n                        // 保存用户信息\n                        console.log(res.data.data.user)\n                        context.commit('SET_USERINFO',res.data.data.user)\n                        resolve(res);\n                    }).catch((err) => {\n                        reject(err);\n                    })\n            })\n        },\n        logout({commit}){\n            // 清除token\n            commit('SET_TOKEN','')\n            storageService.set(storageService.USER_TOKEN,'')\n            // 清除用户信息\n            commit('SET_USERINFO','')\n            storageService.set(storageService.USER_INFO,'')\n        }\n    }\n}\n\nexport default userModule;\n"]}]}