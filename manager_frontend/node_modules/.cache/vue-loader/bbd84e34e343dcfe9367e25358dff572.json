{"remainingRequest":"/Users/joey/joey/go_project/blog/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/joey/joey/go_project/blog/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/joey/joey/go_project/blog/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joey/joey/go_project/blog/frontend/src/components/articleEditor/articleEditor.vue?vue&type=template&id=58667997&","dependencies":[{"path":"/Users/joey/joey/go_project/blog/frontend/src/components/articleEditor/articleEditor.vue","mtime":1592208689139},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}