{"remainingRequest":"/Users/joey/joey/go_project/blog/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joey/joey/go_project/blog/frontend/src/components/articleEditor/articleEditor.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/joey/joey/go_project/blog/frontend/src/components/articleEditor/articleEditor.vue","mtime":1592208689139},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joey/joey/go_project/blog/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJALy9hc3NldHMvY3NzL21kMmh0bWwiOwpAaW1wb3J0ICJ+aGlnaGxpZ2h0LmpzL3N0eWxlcy9hdG9tLW9uZS1saWdodC5jc3MiOwoKLmVkaXRvciB7CiAgcGFkZGluZzogMTBweCAwIDIwcHg7CgogIC5lZGl0b3Itcm93IHsKICAgIHdpZHRoOiAxMDAlOwogICAgcGFkZGluZzogNnB4IDEwcHg7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwoKICAgIC50aXRsZS1pbnB1dCB7CiAgICAgIHdpZHRoOiA1MDBweDsKICAgIH0KICB9CgogIC5jb250ZW50LW1kIHsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKCiAgICAuaW1nLXVwbG9hZCB7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgYm90dG9tOiA0cHg7CiAgICAgIHJpZ2h0OiAyMHB4OwogICAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgIH0KCiAgICAuaWNvbiB7CiAgICAgIGZvbnQtc2l6ZTogMjhweDsKICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgfQoKICAgIC5pbWctZm9ybSB7CiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgbWFyZ2luOiAwIDAgMSUgMjAlOwogICAgICB3aWR0aDogODAlOwogICAgICBoZWlnaHQ6IDEwMHB4OwogICAgICBib3JkZXI6IDFweCBkYXNoZWQgcmdiYSgwLCAwLCAwLCAwLjA4KTsKICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOwoKICAgICAgJjpob3ZlciB7CiAgICAgICAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7CiAgICAgIH0KICAgIH0KCiAgICAuaW1nLWlucHV0IHsKICAgICAgb3BhY2l0eTogMDsKICAgICAgd2lkdGg6IDYwJTsKICAgIH0KCiAgICAuaW1nLWNvbnRlbnQgewogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIHRvcDogMDsKICAgICAgbGVmdDogMDsKICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgICAgcGFkZGluZzogMjBweCAwIDAgMDsKICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICB3aWR0aDogMTAwJTsKICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICB9CgogICAgLnRleHQgewogICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgfQogIH0KCiAgLmNvbnRlbnQtdGV4dGFyZWEgewogICAgJiA+IHRleHRhcmVhIHsKICAgICAgaGVpZ2h0OiA3MDBweDsKICAgICAgcmVzaXplOiBub25lOwogICAgfQogIH0KCiAgLmRpZ2VzdC10ZXh0YXJlYSB7CiAgICAmID4gdGV4dGFyZWEgewogICAgICByZXNpemU6IG5vbmU7CiAgICB9CiAgfQoKICAuY29udGVudC1zaG93IHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkY2RlZTI7CiAgICBoZWlnaHQ6IDcwMHB4OwogICAgcmVzaXplOiBub25lOwogIH0KfQo="},{"version":3,"sources":["articleEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwbA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"articleEditor.vue","sourceRoot":"src/components/articleEditor","sourcesContent":["<template>\n  <div class=\"editor\">\n    <el-form :inline=\"true\" class=\"editor-row\">\n      <el-form-item label=\"文章标题：\">\n        <el-input\n          placeholder=\"文章标题...\"\n          class=\"title-input\"\n          v-model=\"title\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"添加标签：\">\n        <el-input placeholder=\"标签...\" class=\"title-input\" v-model=\"newTag\">\n          <el-button\n            slot=\"append\"\n            type=\"primary\"\n            icon=\"el-icon-plus\"\n            @click=\"handleAddTag\"\n          ></el-button>\n        </el-input>\n      </el-form-item>\n    </el-form>\n\n    <el-row class=\"editor-row\">\n      <el-col>\n        <span>文章标签：</span>\n        <el-tag\n          closable\n          type=\"info\"\n          size=\"mini\"\n          v-for=\"(tag, index) in tags\"\n          :key=\"index\"\n          @close=\"handleDeleteTag(index)\"\n          >{{ tag }}</el-tag\n        >\n      </el-col>\n    </el-row>\n\n    <el-row class=\"editor-row\" :gutter=\"30\">\n      <el-col :span=\"12\" class=\"content-md\">\n        <el-input\n          type=\"textarea\"\n          class=\"content-textarea\"\n          placeholder=\"正文\"\n          v-model=\"mdContent\"\n          ref=\"mdContent\"\n        ></el-input>\n        <div class=\"img-upload\">\n          <i\n            class=\"el-icon-picture\"\n            v-show=\"!isUploadShow\"\n            @click=\"isUploadShow = true\"\n          ></i>\n          <i\n            class=\"el-icon-close\"\n            v-show=\"isUploadShow\"\n            @click=\"isUploadShow = false\"\n          ></i>\n          <!-- <el-upload\n            class=\"upload-demo\"\n            drag\n            action=\"https://jsonplaceholder.typicode.com/posts/\"\n            multiple\n            v-show=\"isUploadShow\"\n          >\n            <i class=\"el-icon-upload\"></i>\n            <div class=\"el-upload__text\">\n              将文件拖到此处，或<em>点击上传</em>\n            </div>\n          </el-upload> -->\n\n          <div class=\"img-form\" v-show=\"isUploadShow\" @click=\"uploadImgClick\">\n            <input\n              class=\"img-input\"\n              type=\"file\"\n              ref=\"imgInput\"\n              @change=\"uploadImg\"\n            />\n            <div class=\"img-content\">\n              <div class=\"text\">点击或者拖拽上传图片</div>\n              <i class=\"el-icon-upload\"></i>\n            </div>\n          </div>\n        </div>\n      </el-col>\n      <el-col :span=\"12\">\n        <div class=\"content-show\" v-html=\"htmlText\" ref=\"htmlContent\"></div>\n      </el-col>\n    </el-row>\n\n    <el-row class=\"editor-row\" :gutter=\"30\">\n      <el-col>\n        <span class=\"text title-text\">文章摘要：</span>\n        <el-input\n          class=\"digest-textarea\"\n          :rows=\"3\"\n          placeholder=\"文章摘要...\"\n          type=\"textarea\"\n          v-model=\"abstract\"\n        />\n      </el-col>\n    </el-row>\n\n    <div class=\"editor-row\">\n      <el-button v-if=\"isNew\" type=\"success\" @click=\"handleSendArticle(0)\"\n        >公开发布</el-button\n      >\n      <el-button v-if=\"isNew\" type=\"success\" @click=\"handleSendArticle(1)\"\n        >私密发布</el-button\n      >\n      <el-button v-if=\"!isNew\" type=\"success\" @click=\"handleChangeArticle()\"\n        >发布修改</el-button\n      >\n    </div>\n\n    <el-dialog :visible.sync=\"showModal\" title=\"修改成功\">\n      <p>是否返回【内容管理页面】？</p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"showModal = !showModal\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"modalClickOk\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <el-dialog\n      title=\"本地存档\"\n      :visible.sync=\"showLocalStorageModal\"\n      width=\"30%\"\n    >\n      <p>检测到有未发布的本地存档，是否恢复存档继续上次的编辑？</p>\n      <p>ps:取消则会删除本地存档!</p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"modalLocalStorageClickCancel\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"modalLocalStorageClickOk\"\n          >确 定</el-button\n        >\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Marked from \"marked\";\nimport highlight from \"highlight.js\";\nimport * as qiniu from \"qiniu-js\";\nimport { GetQiniuToken, Domain, config } from \"@/api/qiniu\";\nimport { SaveImg } from \"@/api/img\";\nimport { SaveArticle, ChangeArticle, GetArticle } from \"@/api/articleEditor\";\n\nexport default {\n  props: {\n    isNew: {\n      type: Boolean\n    },\n    articleId: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      title: \"\",\n      tags: [],\n      newTag: \"\",\n      mdContent: \"\",\n      abstract: \"\",\n      isUploadShow: false,\n      showModal: false,\n      showLocalStorageModal: false,\n      form: {},\n      timer: null,\n      catalog: [],\n      content: \"\"\n    };\n  },\n  methods: {\n    handleDeleteTag(index) {\n      this.tags.splice(index, 1);\n    },\n    handleAddTag() {\n      if (!this.newTag.length) {\n        this.$message.warning(\"拒绝添加空标签！\");\n        return;\n      }\n      if (this.tags.includes(this.newTag)) {\n        this.$message.warning(\"拒绝添加重复标签！\");\n        return;\n      }\n      this.tags.push(this.newTag);\n      this.newTag = \"\";\n    },\n    setLocalStorage() {\n      let articleData = {\n        title: this.title,\n        tags: this.tags,\n        abstract: this.abstract,\n        mdContent: this.mdContent\n      };\n      window.localStorage.setItem(\"_article\", JSON.stringify(articleData));\n    },\n    createCatalog() {\n      let tree = [];\n      const title = { H1: 1, H2: 1, H3: 1, H4: 1, H5: 1 };\n      traverseNode(this.$refs[\"htmlContent\"]);\n\n      function traverseNode(node) {\n        let tag = node.tagName,\n          children = node.children;\n\n        if (title[tag]) {\n          let id = tag + \"-\" + title[tag];\n          tree.push({\n            lev: parseInt(tag.slice(1)),\n            text: node.innerText,\n            id: id\n          });\n          node.setAttribute(\"id\", id);\n          title[tag]++;\n        }\n        for (let i = 0, len = children.length; i < len; i++) {\n          traverseNode(children[i]);\n        }\n      }\n\n      this.catalog = tree;\n      this.content = this.$refs[\"htmlContent\"].innerHTML;\n    },\n    validateForm(data) {\n      const list = [\n        { type: \"title\", msg: \"还没写标题呢！\" },\n        { type: \"tags\", msg: \"不加标签怎么归档？\" },\n        { type: \"content\", msg: \"正文都没有发个啥！！\" },\n        { type: \"abstract\", msg: \"加上摘要首页才好看啊！\" }\n      ];\n      for (let i = 0; i < list.length; i++) {\n        let type = list[i].type;\n        if (!data[type].length) {\n          this.$message.error(list[i].msg);\n          return false;\n        }\n      }\n      return true;\n    },\n    clearForm() {\n      this.title = \"\";\n      this.mdContent = \"\";\n      this.tags = [];\n      this.abstract = \"\";\n    },\n    handleSendArticle(type) {\n      this.setLocalStorage();\n      this.createCatalog();\n      let time = new Date().getTime();\n      let articleData = {\n        title: this.title,\n        date: time,\n        lastDate: time,\n        tags: this.tags,\n        readCount: 0,\n        abstract: this.abstract,\n        content: this.content,\n        mdContent: this.mdContent,\n        type: type,\n        catalog: this.catalog\n      };\n      if (!this.validateForm(articleData)) {\n        return;\n      }\n      SaveArticle(articleData)\n        .then(res => {\n          this.$message.success(res.data.resMsg);\n          this.clearForm();\n          window.localStorage.removeItem(\"_article\"); // 移除存档\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n    handleChangeArticle() {\n      this.setLocalStorage();\n      this.createCatalog();\n      let newData = {\n        title: this.title,\n        tags: this.tags,\n        lastDate: new Date().getTime(),\n        abstract: this.abstract,\n        content: this.content,\n        mdContent: this.mdContent,\n        catalog: this.catalog\n      };\n      ChangeArticle({ _id: this.articleId, newData: newData })\n        .then(() => {\n          this.showModal = true;\n          window.localStorage.removeItem(\"_article\");\n        })\n        .catch(() => {});\n    },\n    autoSave() {\n      if (\n        this.title.length ||\n        this.tags.length ||\n        this.mdContent.length ||\n        this.abstract.length\n      ) {\n        this.setLocalStorage();\n        this.$message.success(\"自动保存成功！\");\n      }\n      this.timer = setTimeout(this.autoSave, 1000 * 60);\n    },\n    modalLocalStorageClickCancel() {\n      this.showLocalStorageModal = false;\n      window.localStorage.removeItem(\"_article\");\n      this.autoSave();\n    },\n    modalLocalStorageClickOk() {\n      this.showLocalStorageModal = false;\n      let articleData = JSON.parse(window.localStorage.getItem(\"_article\"));\n      this.title = articleData.title;\n      this.tags = articleData.tags;\n      this.abstract = articleData.abstract;\n      this.mdContent = articleData.mdContent;\n      this.autoSave();\n    },\n    checkIsSameAsLocalStorage() {\n      if (window.localStorage.getItem(\"_article\")) {\n        let articleData = JSON.parse(window.localStorage.getItem(\"_article\"));\n        if (\n          articleData.title !== this.title ||\n          articleData.tags.join(\"\") !== this.tags.join(\"\") ||\n          articleData.mdContent !== this.mdContent ||\n          articleData.abstract !== this.abstract\n        ) {\n          this.showLocalStorageModal = true;\n        } else {\n          this.autoSave();\n        }\n      } else {\n        this.autoSave();\n      }\n    },\n    uploadImgClick() {\n      this.$refs.imgInput.click();\n    },\n    uploadImg(event) {\n      let files = event.target.files;\n      if (files.length === 0) {\n        return;\n      }\n      let file = files[0];\n\n      //文件名(加一个前缀相当于目录)\n      let filename = \"mdImg/\" + btoa(Date.now()) + file.name;\n      let putExtra = {\n        fname: filename,\n        params: {},\n        mimeType: null\n      };\n      let completeUrl = \"\";\n      let self = this;\n\n      let observer = {\n        next(res) {\n          console.log(res);\n        },\n        error(err) {\n          console.log(err);\n        },\n        complete(res) {\n          let { key } = res;\n          completeUrl = `${Domain}/${key}`;\n          self.mdContent += `![${filename}](${completeUrl})`;\n          let imgData = {\n            filename,\n            url: completeUrl\n          };\n          SaveImg(imgData).then(() => {\n            self.$message.success(\"图片上传成功！\");\n          });\n        }\n      };\n      GetQiniuToken().then(res => {\n        let token = res.data.resData.qiniuToken;\n        let observable = qiniu.upload(file, filename, token, putExtra, config);\n        observable.subscribe(observer);\n      });\n    },\n    modalClickOk() {\n      this.$router.push({ path: \"/admin\" });\n    }\n  },\n  computed: {\n    htmlText() {\n      return Marked(this.mdContent);\n    }\n  },\n  mounted() {\n    Marked.setOptions({\n      renderer: new Marked.Renderer(),\n      smartLists: true,\n      highlight: function(code) {\n        return highlight.highlightAuto(code).value;\n      }\n    });\n\n    let mdContent = this.$refs.mdContent.$el;\n    let _this = this;\n    mdContent.addEventListener(\n      \"scroll\",\n      function() {\n        let realArea = this.children[0];\n        let scrollTop = realArea.scrollTop;\n        let scrollHeight = realArea.scrollHeight - realArea.offsetHeight;\n        let htmlContent = _this.$refs.htmlContent;\n        htmlContent.scrollTop =\n          (htmlContent.scrollHeight - htmlContent.offsetHeight) *\n          (scrollTop / scrollHeight);\n      },\n      true\n    );\n  },\n  created() {\n    if (!this.isNew) {\n      GetArticle({ _id: this.articleId }).then(res => {\n        let data = res.data;\n        let articleData = data.resData[0];\n        this.title = articleData.title;\n        this.tags = articleData.tags;\n        this.mdContent = articleData.mdContent;\n        this.abstract = articleData.abstract;\n        this.checkIsSameAsLocalStorage();\n      });\n    } else {\n      this.checkIsSameAsLocalStorage();\n    }\n  },\n  beforeDestroy() {\n    clearTimeout(this.timer);\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@//assets/css/md2html\";\n@import \"~highlight.js/styles/atom-one-light.css\";\n\n.editor {\n  padding: 10px 0 20px;\n\n  .editor-row {\n    width: 100%;\n    padding: 6px 10px;\n    text-align: left;\n\n    .title-input {\n      width: 500px;\n    }\n  }\n\n  .content-md {\n    position: relative;\n\n    .img-upload {\n      position: absolute;\n      bottom: 4px;\n      right: 20px;\n      text-align: right;\n    }\n\n    .icon {\n      font-size: 28px;\n      cursor: pointer;\n    }\n\n    .img-form {\n      position: relative;\n      margin: 0 0 1% 20%;\n      width: 80%;\n      height: 100px;\n      border: 1px dashed rgba(0, 0, 0, 0.08);\n      background: rgba(255, 255, 255, 0.8);\n\n      &:hover {\n        border-color: rgba(0, 0, 0, 0.5);\n      }\n    }\n\n    .img-input {\n      opacity: 0;\n      width: 60%;\n    }\n\n    .img-content {\n      position: absolute;\n      top: 0;\n      left: 0;\n      box-sizing: border-box;\n      padding: 20px 0 0 0;\n      text-align: center;\n      width: 100%;\n      height: 100%;\n      cursor: pointer;\n    }\n\n    .text {\n      margin-bottom: 10px;\n    }\n  }\n\n  .content-textarea {\n    & > textarea {\n      height: 700px;\n      resize: none;\n    }\n  }\n\n  .digest-textarea {\n    & > textarea {\n      resize: none;\n    }\n  }\n\n  .content-show {\n    border: 1px solid #dcdee2;\n    height: 700px;\n    resize: none;\n  }\n}\n</style>\n"]}]}